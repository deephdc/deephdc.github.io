<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>DEEP Open Catalog - video</title><link href="https://marketplace.deep-hybrid-datacloud.eu/" rel="alternate"></link><link href="https://marketplace.deep-hybrid-datacloud.eu/feeds/video.atom.xml" rel="self"></link><id>https://marketplace.deep-hybrid-datacloud.eu/</id><updated>2023-09-27T09:42:11+02:00</updated><entry><title>Object detection with FasterRCNN</title><link href="https://marketplace.deep-hybrid-datacloud.eu/modules/deep-oc-fasterrcnn-pytorch-api.html" rel="alternate"></link><published>2023-05-04T00:00:00+02:00</published><updated>2023-09-27T09:42:11+02:00</updated><author><name>DEEP-Hybrid-DataCloud Consortium</name></author><id>tag:marketplace.deep-hybrid-datacloud.eu,2023-05-04:/modules/deep-oc-fasterrcnn-pytorch-api.html</id><summary type="html">&lt;p&gt;Object detection using FasterRCNN model(s) (fasterrcnn_pytorch_api)&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="https://jenkins.indigo-datacloud.eu/job/Pipeline-as-code/job/DEEP-OC-org/job/DEEP-OC-fasterrcnn_pytorch_api/job/master"&gt;&lt;img alt="Build Status" src="https://jenkins.indigo-datacloud.eu/buildStatus/icon?job=Pipeline-as-code/DEEP-OC-org/DEEP-OC-fasterrcnn_pytorch_api/master"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The module, fasterrcnn_pytorch_api, provides API access to the pipeline [1] for training FasterRCNN [2] models on custom datasets.
The pipeline is implemented in &lt;a href="https://pytorch.org/"&gt;PyTorch&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;With this pipeline, you have the flexibility to choose between official PyTorch models trained on the COCO dataset [3], use any backbone from 
Torchvision classification models, or even define your own custom backbones. The trained models can be used for object detection tasks on your specific datasets.&lt;/p&gt;
&lt;p&gt;The original pipeline is developed in the external repository [1]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;References&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;[1] https://github.com/sovit-123/fasterrcnn-pytorch-training-pipeline&lt;/p&gt;
&lt;p&gt;[2] Ren, S., et al, Faster R-CNN: Towards real-time object detection with region proposal networks, 2015, https://arxiv.org/abs/1506.01497 [cs.CV]&lt;/p&gt;
&lt;p&gt;[3] Lin, T.Y., et al., Microsoft COCO: Common Objects in Context, 2014, http://arxiv.org/abs/1405.0312 [cs.CV]&lt;/p&gt;</content><category term="docker"></category></entry></feed>